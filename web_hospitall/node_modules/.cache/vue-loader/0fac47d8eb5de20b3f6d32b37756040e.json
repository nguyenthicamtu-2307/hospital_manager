{"remainingRequest":"C:\\Users\\FPTSHOP\\Downloads\\doan-main\\doan-main\\web_hospitall\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\FPTSHOP\\Downloads\\doan-main\\doan-main\\web_hospitall\\src\\components\\user\\BlogDetail.vue?vue&type=style&index=0&id=0f3d6617&lang=css","dependencies":[{"path":"C:\\Users\\FPTSHOP\\Downloads\\doan-main\\doan-main\\web_hospitall\\src\\components\\user\\BlogDetail.vue","mtime":1655485572000},{"path":"C:\\Users\\FPTSHOP\\Downloads\\doan-main\\doan-main\\web_hospitall\\node_modules\\css-loader\\dist\\cjs.js","mtime":1696259728089},{"path":"C:\\Users\\FPTSHOP\\Downloads\\doan-main\\doan-main\\web_hospitall\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1696259730390},{"path":"C:\\Users\\FPTSHOP\\Downloads\\doan-main\\doan-main\\web_hospitall\\node_modules\\postcss-loader\\src\\index.js","mtime":1696259728996},{"path":"C:\\Users\\FPTSHOP\\Downloads\\doan-main\\doan-main\\web_hospitall\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1696259727396},{"path":"C:\\Users\\FPTSHOP\\Downloads\\doan-main\\doan-main\\web_hospitall\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1696259729376}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5kaXNhYmxlZCB7CiAgICBvcGFjaXR5OiAwLjUgIWltcG9ydGFudDsKICAgIGN1cnNvcjogbm90LWFsbG93ZWQ7Cn0K"},{"version":3,"sources":["C:\\Users\\FPTSHOP\\Downloads\\doan-main\\doan-main\\web_hospitall\\src\\components\\user\\BlogDetail.vue"],"names":[],"mappings":";AAsIA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB","file":"C:/Users/FPTSHOP/Downloads/doan-main/doan-main/web_hospitall/src/components/user/BlogDetail.vue","sourceRoot":"","sourcesContent":["<template>\n    <div v-if=\"!loading\">\n        <div v-if=\"blog\" class=\"wrapper blog blog__flex\">\n            <div>\n                <h1 class=\"blog__title\">\n                    {{ blog.title }}\n                </h1>\n                <div class=\"blog__child\">\n                    <span>{{ blog.type_blog === 0 ? 'Bài viết thông thườngg' : 'Bài viết công nghệ' }}</span>\n                    <p>Thứ Hai, {{ blog.created_at }} +07:00</p>\n                </div>\n                <br />\n                <hr />\n                <br />\n                <div v-html=\"blog.content\" class=\"content__blog\"></div>\n            </div>\n            <div>\n                <ItemBlogDetail v-for=\"item in list\" :key=\"item.id\" :item=\"item\" />\n            </div>\n        </div>\n        <div class=\"wrapper\">\n            <br />\n            <p class=\"reply__title\">\n                Bình luận ({{ comments.length }})\n            </p>\n            <div v-if=\"user\" class=\"form-comment\">\n                <div class=\"order__form--textarea\">\n                    <textarea placeholder=\"Nội dung\" name=\"content\" @input=\"onChangeInput\"\n                        v-model=\"content.value\"></textarea>\n                    <span class=\"bx bxs-plus-circle\"></span>\n                </div>\n                <p class=\"color-red\" :class=\"content.error ? 'active' : 'hidden'\">Nội dung không được trống</p>\n                <br />\n                <button v-if=\"!loadingButton\" @click=\"onSubmit\" class=\"order__form--button\">\n                    Bình luận\n                </button>\n                <button v-else class=\"order__form--button\" :class=\"loadingButton ? 'disabled' : ''\" disabled>\n                    <span class=\"bx bx-loader loading\"></span>\n                </button>\n            </div>\n            <div v-if=\"comments.length === 0\" class=\"loading__content\">\n                Không có bất kì bình luận nào.\n            </div>\n            <div v-else>\n                <ItemReplyBlog v-for=\"item in comments\" :key=\"item.id\" :item=\"item\" />\n            </div>\n        </div>\n    </div>\n    <div class=\"wrapper blog\" v-else>\n        <div class=\"loading__content\">\n            <span class=\"bx bx-loader loading\"></span>\n        </div>\n    </div>\n</template>\n<script>\nimport Request from '../../Request';\nimport ItemBlogDetail from './components/ItemComponent/ItemBlogDetail.vue';\nimport ItemReplyBlog from './components/ItemComponent/ItemReplyBlog.vue';\nimport { mapState } from 'vuex';\n\nexport default {\n    components: { ItemBlogDetail, ItemReplyBlog },\n    data() {\n        return {\n            blog: null,\n            loading: true,\n            list: [],\n            comments: [],\n            loadingButton: false,\n            content: {\n                value: '',\n                error: false\n            },\n            // fullname: {\n            //     value: '',\n            //     error: false\n            // },\n        }\n    },\n    computed: {\n        ...mapState(['user'])\n    },\n    methods: {\n        onChangeInput: function (event) {\n            this[event.target.name].value = event.target.value;\n            this[event.target.name].error = event.target.value.length === 0;\n        },\n        onSubmit: async function () {\n            this.loadingButton = true;\n            this.content.error = this.content.value.length === 0;\n            if (!this.content.error) {\n                const result = await Request.Post('/commentBlogs', {\n                    fullname: this.user?.fullname,\n                    content: this.content.value,\n                    iduser: this.user?.id,\n                    idblog: this.blog?.id\n                });\n                this.comments = [...this.comments, result.data.data];\n                this.content.value = '';\n            }\n            this.loadingButton = false;\n        },\n        fetchData: async function () {\n            try {\n                this.loading = true;\n                let result = await Request.Post('/blog-slug', {\n                    slug: this.$route.params.slug\n                });\n                await Request.Get(`/update-view-blog/${this.$route.params.slug}`);\n                this.blog = result.data.data;\n                result = await Request.Post('/blog-different', {\n                    slug: this.$route.params.slug\n                });\n                this.list = result.data.data;\n                result = await Request.Get(`/commentBlogs/${this.$route.params.slug}`);\n                this.comments = result.data.data;\n                this.loading = false;\n            } catch (error) {\n                // alert(error);\n                console.log(error);\n            }\n        }\n    },\n    watch: {\n        $route() {\n            this.fetchData();\n        }\n    },\n    mounted() {\n        this.fetchData();\n    }\n}\n</script>\n<style>\n.disabled {\n    opacity: 0.5 !important;\n    cursor: not-allowed;\n}\n</style>"]}]}